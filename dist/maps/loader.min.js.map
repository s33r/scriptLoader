{"version":3,"sources":["loader.js"],"names":["scriptLoader","scriptsToLoad","onLoaded","requests","importScript","src","onSuccess","onError","scriptElement","document","createElement","async","onerror","onload","head","appendChild","loadAsync","asyncScripts","callback","counter","length","forEach","scriptObject","primaryUrl","event","secondaryUrl","loop","setTimeout","loadSync","syncScripts","previousFunction","j","item","prevFunction"],"mappings":"AAKA,QAASA,cAAaC,EAAeC,GAEpC,GAAIC,MAEAC,EAAe,SAAUC,EAAKC,EAAWC,GAC5C,IAAKJ,EAASE,GAAd,CAIA,GAAIG,GAAkBC,SAASC,cAAc,SAe7C,OAdAF,GAAcH,IAAQA,EACtBG,EAAcG,OAAQ,EAElBJ,IACHC,EAAcI,QAAUL,GAGrBD,IACHE,EAAcK,OAASP,GAGxBG,SAASK,KAAKC,YAAYP,GAC1BL,EAASE,IAAO,EAETG,IAGJQ,EAAY,SAAUC,EAAcC,GACvC,GAAIC,GAAUF,EAAaG,MAC3BH,GAAaI,QAAQ,SAAUC,GAC9BlB,EAAakB,EAAaC,WAAY,SAAUC,GAC/CL,KACE,WACGG,EAAaG,aACjBrB,EAAakB,EAAaG,aAAc,WACvCN,KACE,WACFA,MAGDA,QAKH,QAAUO,KACTC,WAAW,WACNR,EAAU,EACbO,IAEAR,UAMAU,EAAW,SAAUC,EAAaX,GAErC,IAAK,GADDY,GAAmBZ,EACda,EAAKF,EAAYT,OAAS,EAAIW,GAAK,EAAGA,IAAK,CAEnD,GAAId,GAAeY,EAAYE,EAC/BD,GAAoB,SAAWE,EAAMC,GACpC,MAAO,YACNjB,EAAUgB,EAAM,WACfC,QAGAhB,EAAca,GAGlBA,IAGDF,GAAS3B,EAAeC","file":"loader.min.js","sourcesContent":["/**\r\n * Loads a tiered set of scripts asynchronously. Includes the option to load fallback scripts as well.\r\n * @param scriptsToLoad An array of arrays of scripts to load.\r\n * @param onLoaded a callback that is called once ALL scripts have finished loading.\r\n */\r\nfunction scriptLoader(scriptsToLoad, onLoaded) {\r\n\t//Prevents duplicate requests since the onerror event fires twice.\r\n\tvar requests = {};\r\n\r\n\tvar importScript = function (src, onSuccess, onError) {\r\n\t\tif(!!requests[src]) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tvar scriptElement   = document.createElement('script');\r\n\t\tscriptElement.src   = src;\r\n\t\tscriptElement.async = false;\r\n\r\n\t\tif (onError) {\r\n\t\t\tscriptElement.onerror = onError;\r\n\t\t}\r\n\r\n\t\tif (onSuccess) {\r\n\t\t\tscriptElement.onload = onSuccess;\r\n\t\t}\r\n\r\n\t\tdocument.head.appendChild(scriptElement);\r\n\t\trequests[src] = true;\r\n\r\n\t\treturn scriptElement;\r\n\t};\r\n\r\n\tvar loadAsync = function (asyncScripts, callback) {\r\n\t\tvar counter = asyncScripts.length;\r\n\t\tasyncScripts.forEach(function (scriptObject) {\r\n\t\t\timportScript(scriptObject.primaryUrl, function (event) {\r\n\t\t\t\tcounter--;\r\n\t\t\t}, function () {\r\n\t\t\t\tif(!!scriptObject.secondaryUrl) {\r\n\t\t\t\t\timportScript(scriptObject.secondaryUrl, function () {\r\n\t\t\t\t\t\tcounter--;\r\n\t\t\t\t\t}, function() {\r\n\t\t\t\t\t\tcounter--;\r\n\t\t\t\t\t});\r\n\t\t\t\t} else {\r\n\t\t\t\t\tcounter--;\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t});\r\n\r\n\t\t(function loop() {\r\n\t\t\tsetTimeout(function () {\r\n\t\t\t\tif (counter > 0) {\r\n\t\t\t\t\tloop();\r\n\t\t\t\t} else {\r\n\t\t\t\t\tcallback();\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t})();\r\n\t};\r\n\r\n\tvar loadSync = function (syncScripts, callback) {\r\n\t\tvar previousFunction = callback;\r\n\t\tfor (var j = (syncScripts.length - 1); j >= 0; j--) {\r\n\r\n\t\t\tvar asyncScripts = syncScripts[j];\r\n\t\t\tpreviousFunction  = (function (item, prevFunction) {\r\n\t\t\t\treturn function () {\r\n\t\t\t\t\tloadAsync(item, function() {\r\n\t\t\t\t\t\tprevFunction();\r\n\t\t\t\t\t});\r\n\t\t\t\t};\r\n\t\t\t})(asyncScripts, previousFunction);\r\n\t\t}\r\n\r\n\t\tpreviousFunction();\r\n\t};\r\n\r\n\tloadSync(scriptsToLoad, onLoaded);\r\n}"],"sourceRoot":"/source/"}